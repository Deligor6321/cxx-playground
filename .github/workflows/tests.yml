name: Run tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [msvc, clang, gcc]
        include:
          - os: windows-latest
            compiler: msvc
          - os: ubuntu-latest
            compiler: gcc
          - os: ubuntu-latest
            compiler: clang
        exclude:
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang
          - os: ubuntu-latest
            compiler: msvc

    steps:
    - uses: actions/checkout@v3

    - name: Setup env (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      run: |
        echo "BUILD_TYPE=Release" >> $GITHUB_ENV
        echo "CMAKE_PRESET=conan-release" >> $GITHUB_ENV

    - name: Setup env (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      shell: bash
      run: |
        echo "BUILD_TYPE=Release" >> $GITHUB_ENV
        echo "CMAKE_PRESET=conan-default" >> $GITHUB_ENV

    - name: Cache LLVM
      if: ${{ matrix.compiler == 'clang' }}
      id: cache-llvm
      uses: actions/cache@v3
      with:
        path: |
          ./llvm
        key: llvm-16

    - name: Install and configure compiler (Clang)
      if: ${{ matrix.compiler == 'clang' }}
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "16.0"
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}
        env: true

    - name: Configure compiler (GCC)
      if: ${{ matrix.compiler == 'gcc' }}
      shell: bash
      run: |
        echo "CC=gcc-13" >> $GITHUB_ENV
        echo "CXX=g++-13" >> $GITHUB_ENV

    - name: Configure runner
      shell: bash
      run: |
        pip install conan
        conan --version
        conan profile detect --force

    - name: Install deps
      shell: bash
      run: >
        conan install ${{ github.workspace }}/conanfile.py
        --profile:host=${{ github.workspace }}/conan/profiles/ci/${{ matrix.compiler }}
        --profile:build=${{ github.workspace }}/conan/profiles/ci/${{ matrix.compiler }}
        --settings=build_type=${{ env.BUILD_TYPE }}
        --build=missing

    - name: Configure
      shell: bash
      run: cmake --preset ${{ env.CMAKE_PRESET }}

    - name: Build
      shell: bash
      run: cmake --build --preset ${{ env.CMAKE_PRESET }}
