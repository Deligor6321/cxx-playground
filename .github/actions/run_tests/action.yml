
name: Run tests

inputs:
  compiler:
    description: 'Compiler'
    required: true

runs:
  using: 'composite'
  steps:
  - name: Setup env
    shell: bash
    run: |
      echo "CONAN_VERSION=2.0.14" >> $GITHUB_ENV

      echo "BUILD_TYPE=Release" >> $GITHUB_ENV

      echo "CMAKE_CONFIG_PRESET=conan-release" >> $GITHUB_ENV
      echo "CMAKE_BUILD_PRESET=conan-release" >> $GITHUB_ENV
      echo "CMAKE_TEST_PRESET=conan-release" >> $GITHUB_ENV

  - name: Setup build options (Windows)
    if: ${{ runner.os == 'Windows' }}
    shell: bash
    run: |
      echo "CMAKE_CONFIG_PRESET=conan-default" >> $GITHUB_ENV

  - name: Install and configure conan
    shell: bash
    run: |
      pipx install conan==${{ env.CONAN_VERSION }}
      conan --version
      conan profile detect --force --name base
      cp conan/profiles/${{ inputs.compiler }} $(dirname $(conan profile path base))/default
      echo "COMPILER_KEY=${{ hashFiles('./conan/profiles/${{ inputs.compiler }}') }}" >> $GITHUB_ENV

  - name: Restore conan cache
    id: cache-conan
    uses: ./.github/actions/conan_cache/restore
    with:
      key: ${{ runner.os }}-${{ runner.arch }}__conan-${{ env.CONAN_VERSION }}__${{ env.COMPILER_KEY }}__${{ hashFiles('./conanfile.py') }}

  - name: Install deps
    shell: bash
    run: >
      conan install ./conanfile.py
      --settings=build_type=${{ env.BUILD_TYPE }}
      --build=missing

  - name: Configure
    shell: bash
    run: cmake --preset ${{ env.CMAKE_CONFIG_PRESET }}

  - name: Build
    shell: bash
    run: cmake --build --preset ${{ env.CMAKE_BUILD_PRESET }}

  - name: Run tests
    shell: bash
    run: ctest --preset ${{ env.CMAKE_TEST_PRESET }} --output-on-failure

  - name: Save conan cache
    if: ${{ !steps.cache-conan.outputs.cache-hit }}
    uses: ./.github/actions/conan_cache/save
    with:
      key: ${{ steps.cache-conan.outputs.cache-primary-key }}
